
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> args <- (commandArgs(trailingOnly = TRUE))
> for (i in seq_len(length(args))) {
+   eval(parse(text = args[[i]]))
+ }
> 
> suppressPackageStartupMessages({
+   library(dplyr)
+   library(ggplot2)
+   library(SummarizedExperiment)
+   library(SingleCellExperiment)
+   library(scater)
+   library(readr)
+   library(UpSetR)
+   library(pheatmap)
+ })
> 
> 
> topdir <- ".."
> plothelperscript <- paste0(topdir, "/scripts/plot_helpers.R")
> datasets <- c("spermatogenesis_mouse", "dentate_gyrus_mouse", "pancreas_mouse", "pfc_mouse")
> 
> source(plothelperscript)
> 
> files <- lapply(datasets, function(ds) {
+   readRDS(file.path(topdir, ds, "plots/velocity_confidence", 
+                     paste0(gsub("_10k_v3", "", gsub("_mouse", "", ds)), 
+                            "_plot_velocity_confidence.rds")))
+ })
> 
> cellinfo <- do.call(dplyr::bind_rows, lapply(files, function(f) f$cell_vel))
Warning messages:
1: In bind_rows_(x, .id) : Unequal factor levels: coercing to character
2: In bind_rows_(x, .id) :
  binding character and factor vector, coercing into character vector
3: In bind_rows_(x, .id) :
  binding character and factor vector, coercing into character vector
4: In bind_rows_(x, .id) :
  binding character and factor vector, coercing into character vector
5: In bind_rows_(x, .id) :
  binding character and factor vector, coercing into character vector
> geneinfo <- do.call(dplyr::bind_rows, lapply(files, function(f) f$gene_vel))
> 
> pdf("velocity_sd_latent_time.pdf")
> ggplot(cellinfo %>% dplyr::filter(dataset != "Neuron") %>% 
+          dplyr::group_by(dataset, method_short, mtype, clusters) %>% 
+          dplyr::summarize(ltsd = sd(latent_time)), 
+        aes(x = dataset, y = ltsd)) + 
+   geom_boxplot(outlier.size = -1, aes(fill = mtype)) + 
+   geom_jitter(width = 0.2, height = 0) + 
+   facet_wrap(~ method_short) + 
+   theme_bw() + 
+   scale_fill_manual(values = base_method_colors, name = "") + 
+   theme(legend.position = "none",
+         axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
+         strip.text = element_text(size = 8)) + 
+   labs(x = "", 
+        y = "Within-cell type standard deviation of latent time estimate")
> dev.off()  
null device 
          1 
> 
> pdf("velocity_max_cosine_corr_across_datasets.pdf")
> ggplot(cellinfo %>% dplyr::filter(dataset != "Neuron"), 
+        aes(x = dataset, y = max_cosine_corr)) + 
+   geom_boxplot(outlier.size = 0.1, aes(fill = mtype)) + 
+   facet_wrap(~ method_short) + 
+   theme_bw() + 
+   scale_fill_manual(values = base_method_colors, name = "") + 
+   theme(legend.position = "none",
+         axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
+         strip.text = element_text(size = 8)) + 
+   labs(x = "", 
+        y = "Maximal cosine correlation by cell")
> dev.off()  
null device 
          1 
> 
> pdf("summary_velocity.pdf", width = 8, height = 8)
> g1 <- ggplot(cellinfo, aes(x = method_short, y = velocity_confidence)) + 
+   geom_boxplot(aes(fill = mtype), alpha = 0.5, size = 0.5) + 
+   theme_bw() + facet_wrap(~ dataset, ncol = 1) + 
+   scale_fill_manual(values = base_method_colors, name = "") + 
+   theme(legend.position = "none",
+         axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
+   labs(title = "Velocity confidence, per cell", y = "Velocity confidence", x = "")
> 
> g2 <- ggplot(geneinfo, aes(x = method_short, y = fit_likelihood)) + 
+   geom_boxplot(aes(fill = mtype), alpha = 0.5, size = 0.5) + 
+   theme_bw() + facet_wrap(~ dataset, ncol = 1) + 
+   scale_fill_manual(values = base_method_colors, name = "") + 
+   theme(legend.position = "none",
+         axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
+   labs(title = "Fit likelihood, per gene", y = "Fit likelihood", x = "")
> 
> cowplot::plot_grid(g1, g2, nrow = 1, labels = c("A", "B"))
Warning message:
Removed 19 rows containing non-finite values (stat_boxplot). 
> dev.off()
null device 
          1 
> 
> date()
[1] "Mon Feb 17 10:55:04 2020"
> sessionInfo()
R version 3.6.1 (2019-07-05)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: CentOS Linux 7 (Core)

Matrix products: default
BLAS/LAPACK: /tungstenfs/groups/gbioinfo/Appz/easybuild/software/OpenBLAS/0.3.7-GCC-8.3.0/lib/libopenblas_skylakex-r0.3.7.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] parallel  stats4    stats     graphics  grDevices utils     datasets 
[8] methods   base     

other attached packages:
 [1] pheatmap_1.0.12             UpSetR_1.4.0               
 [3] readr_1.3.1                 scater_1.14.6              
 [5] SingleCellExperiment_1.8.0  SummarizedExperiment_1.16.1
 [7] DelayedArray_0.12.2         BiocParallel_1.20.1        
 [9] matrixStats_0.55.0          Biobase_2.46.0             
[11] GenomicRanges_1.38.0        GenomeInfoDb_1.22.0        
[13] IRanges_2.20.2              S4Vectors_0.24.3           
[15] BiocGenerics_0.32.0         ggplot2_3.2.1              
[17] dplyr_0.8.4                

loaded via a namespace (and not attached):
 [1] beeswarm_0.2.3           tidyselect_1.0.0         purrr_0.3.3             
 [4] BiocSingular_1.2.1       lattice_0.20-38          colorspace_1.4-1        
 [7] vctrs_0.2.2              viridisLite_0.3.0        rlang_0.4.4             
[10] pillar_1.4.3             glue_1.3.1               withr_2.1.2             
[13] RColorBrewer_1.1-2       GenomeInfoDbData_1.2.2   lifecycle_0.1.0         
[16] plyr_1.8.5               zlibbioc_1.32.0          munsell_0.5.0           
[19] gtable_0.3.0             rsvd_1.0.2               labeling_0.3            
[22] vipor_0.4.5              irlba_2.3.3              BiocNeighbors_1.4.1     
[25] Rcpp_1.0.3               scales_1.1.0             XVector_0.26.0          
[28] farver_2.0.3             gridExtra_2.3            hms_0.5.3               
[31] cowplot_1.0.0            grid_3.6.1               bitops_1.0-6            
[34] tools_3.6.1              magrittr_1.5             lazyeval_0.2.2          
[37] RCurl_1.98-1.1           tibble_2.1.3             crayon_1.3.4            
[40] pkgconfig_2.0.3          Matrix_1.2-18            DelayedMatrixStats_1.8.0
[43] ggbeeswarm_0.6.0         assertthat_0.2.1         viridis_0.5.1           
[46] R6_2.4.1                 compiler_3.6.1          
> 
> 
> proc.time()
   user  system elapsed 
  9.693   0.727  11.448 
