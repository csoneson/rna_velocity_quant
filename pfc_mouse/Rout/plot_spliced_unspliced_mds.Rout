
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> args <- (commandArgs(trailingOnly = TRUE))
> for (i in seq_len(length(args))) {
+   eval(parse(text = args[[i]]))
+ }
> 
> suppressPackageStartupMessages({
+   library(dplyr)
+   library(ggplot2)
+   library(SummarizedExperiment)
+   library(SingleCellExperiment)
+   library(cowplot)
+   library(ggrepel)
+ })
> source(plothelperscript)
> 
> methods <- strsplit(methods, ",")[[1]]
> names(methods) <- methods
> 
> print(plothelperscript)
[1] "/tungstenfs/groups/gbioinfo/sonechar/Projects/alevin_velocity/scripts/plot_helpers.R"
> print(topdir)
[1] "/tungstenfs/groups/gbioinfo/sonechar/Projects/alevin_velocity/pfc_mouse"
> print(methods)
                                       velocyto 
                                     "velocyto" 
  kallisto_bustools_prepref_isocollapse_exclude 
"kallisto_bustools_prepref_isocollapse_exclude" 
  kallisto_bustools_prepref_isoseparate_exclude 
"kallisto_bustools_prepref_isoseparate_exclude" 
  kallisto_bustools_prepref_isocollapse_include 
"kallisto_bustools_prepref_isocollapse_include" 
  kallisto_bustools_prepref_isoseparate_include 
"kallisto_bustools_prepref_isoseparate_include" 
        alevin_prepref_isocollapse_cdna_introns 
      "alevin_prepref_isocollapse_cdna_introns" 
        alevin_prepref_isoseparate_cdna_introns 
      "alevin_prepref_isoseparate_cdna_introns" 
  alevin_prepref_isocollapse_cdna_introns_decoy 
"alevin_prepref_isocollapse_cdna_introns_decoy" 
  alevin_prepref_isoseparate_cdna_introns_decoy 
"alevin_prepref_isoseparate_cdna_introns_decoy" 
                       alevin_spliced_unspliced 
                     "alevin_spliced_unspliced" 
                                       starsolo 
                                     "starsolo" 
                                 starsolo_subtr 
                               "starsolo_subtr" 
> print(outrds)
[1] "plots/spliced_unspliced_mds/pfc_plot_spliced_unspliced_mds.rds"
> 
> sces <- lapply(methods, function(nm) {
+   readRDS(file.path(topdir, paste0("output/sce/sce_", nm, ".rds")))
+ })
> 
> methods_short <- shorten_methods(methods)
> 
> ## ------------------------------------------------------------------------- ##
> ## Overall similarity (RMSE of count matrices) 
> ## ------------------------------------------------------------------------- ##
> rmse <- do.call(dplyr::bind_rows, lapply(names(sces), function(s1) {
+   do.call(dplyr::bind_rows, lapply(names(sces), function(s2) {
+     data.frame(m1 = s1, m2 = s2, 
+                RMSEspliced = sqrt(mean((assay(sces[[s1]], "spliced") - 
+                                           assay(sces[[s2]], "spliced"))^2)),
+                RMSEunspliced = sqrt(mean((assay(sces[[s1]], "unspliced") - 
+                                             assay(sces[[s2]], "unspliced"))^2)),
+                stringsAsFactors = FALSE)
+   }))
+ }))
> rmses <- rmse %>% dplyr::select(m1, m2, RMSEspliced) %>% 
+   tidyr::spread(key = m2, value = RMSEspliced) %>%
+   as.data.frame() %>%
+   tibble::column_to_rownames("m1") %>%
+   as.matrix()
> rmseu <- rmse %>% dplyr::select(m1, m2, RMSEunspliced) %>% 
+   tidyr::spread(key = m2, value = RMSEunspliced) %>%
+   as.data.frame() %>%
+   tibble::column_to_rownames("m1") %>%
+   as.matrix()
> 
> ## MDS
> cmdspliced <- as.data.frame(cmdscale(rmses, k = 2)) %>%
+   tibble::rownames_to_column("method") %>%
+   dplyr::left_join(methods_short, by = "method")
> 
> cmdunspliced <- as.data.frame(cmdscale(rmseu, k = 2)) %>%
+   tibble::rownames_to_column("method") %>%
+   dplyr::left_join(methods_short, by = "method")
> 
> plset <- list(
+   aes(x = V1, y = V2, shape = rtype, label = method_short),
+   geom_point(aes(color = mtype), size = 7, alpha = 0.7),
+   geom_label_repel(size = 3),
+   theme_minimal(),
+   scale_color_manual(values = base_method_colors, name = ""),
+   scale_shape_discrete(name = ""),
+   labs(x = "MDS1", y = "MDS2")
+ )
> pdf(gsub("\\.rds$", "_mds_spliced_unspliced.pdf", outrds), width = 10, height = 6)
> cowplot::plot_grid(
+   cowplot::plot_grid(
+     ggplot(cmdspliced) + 
+       plset + ggtitle("MDS, RMSE (spliced)") + 
+       theme(legend.position = "none"),
+     ggplot(cmdunspliced) + 
+       plset + ggtitle("MDS, RMSE (unspliced)") + 
+       theme(legend.position = "none"),
+     nrow = 1, labels = c("A", "B"), rel_widths = c(1, 1)
+   ),
+   cowplot::get_legend(ggplot(cmdspliced) + 
+                         plset + theme(legend.position = "bottom")),
+   ncol = 1, labels = "", rel_heights = c(1, 0.1)
+ )
> dev.off()
null device 
          1 
> 
> saveRDS(NULL, file = outrds)
> date()
[1] "Tue Dec 31 17:25:44 2019"
> sessionInfo()
R version 3.6.1 (2019-07-05)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: CentOS Linux 7 (Core)

Matrix products: default
BLAS/LAPACK: /tungstenfs/groups/gbioinfo/Appz/easybuild/software/OpenBLAS/0.3.7-GCC-8.3.0/lib/libopenblas_skylakex-r0.3.7.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] parallel  stats4    stats     graphics  grDevices utils     datasets 
[8] methods   base     

other attached packages:
 [1] ggrepel_0.8.1               cowplot_1.0.0              
 [3] SingleCellExperiment_1.8.0  SummarizedExperiment_1.16.0
 [5] DelayedArray_0.12.0         BiocParallel_1.20.0        
 [7] matrixStats_0.55.0          Biobase_2.46.0             
 [9] GenomicRanges_1.38.0        GenomeInfoDb_1.22.0        
[11] IRanges_2.20.1              S4Vectors_0.24.1           
[13] BiocGenerics_0.32.0         ggplot2_3.2.1              
[15] dplyr_0.8.3                

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.3             pillar_1.4.2           compiler_3.6.1        
 [4] XVector_0.26.0         tools_3.6.1            bitops_1.0-6          
 [7] zlibbioc_1.32.0        digest_0.6.23          zeallot_0.1.0         
[10] lifecycle_0.1.0        tibble_2.1.3           gtable_0.3.0          
[13] lattice_0.20-38        pkgconfig_2.0.3        rlang_0.4.2           
[16] Matrix_1.2-18          GenomeInfoDbData_1.2.2 stringr_1.4.0         
[19] withr_2.1.2            vctrs_0.2.1            grid_3.6.1            
[22] tidyselect_0.2.5       glue_1.3.1             R6_2.4.1              
[25] farver_2.0.1           tidyr_1.0.0            purrr_0.3.3           
[28] magrittr_1.5           backports_1.1.5        scales_1.1.0          
[31] assertthat_0.2.1       colorspace_1.4-1       labeling_0.3          
[34] stringi_1.4.3          RCurl_1.95-4.12        lazyeval_0.2.2        
[37] munsell_0.5.0          crayon_1.3.4          
> 
> proc.time()
   user  system elapsed 
117.470   3.135 121.540 
