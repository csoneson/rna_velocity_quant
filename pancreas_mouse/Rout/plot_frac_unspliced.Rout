
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> args <- (commandArgs(trailingOnly = TRUE))
> for (i in seq_len(length(args))) {
+   eval(parse(text = args[[i]]))
+ }
> 
> suppressPackageStartupMessages({
+   library(dplyr)
+   library(ggplot2)
+   library(SummarizedExperiment)
+   library(SingleCellExperiment)
+   library(cowplot)
+ })
> source(plothelperscript)
> 
> methods <- strsplit(methods, ",")[[1]]
> names(methods) <- methods
> 
> print(plothelperscript)
[1] "/tungstenfs/groups/gbioinfo/sonechar/Projects/alevin_velocity/scripts/plot_helpers.R"
> print(topdir)
[1] "/tungstenfs/groups/gbioinfo/sonechar/Projects/alevin_velocity/pancreas_mouse"
> print(refdir)  ## directory where uniqueness files are
[1] "reference"
> print(tx2gene)
[1] "/tungstenfs/groups/gbioinfo/DB/GENCODE/Mouse/release_M21/tx2gene/gencode.vM21.annotation.tx2gene_full.rds"
> print(methods)
                                       velocyto 
                                     "velocyto" 
  kallisto_bustools_prepref_isocollapse_exclude 
"kallisto_bustools_prepref_isocollapse_exclude" 
  kallisto_bustools_prepref_isoseparate_exclude 
"kallisto_bustools_prepref_isoseparate_exclude" 
  kallisto_bustools_prepref_isocollapse_include 
"kallisto_bustools_prepref_isocollapse_include" 
  kallisto_bustools_prepref_isoseparate_include 
"kallisto_bustools_prepref_isoseparate_include" 
        alevin_prepref_isocollapse_cdna_introns 
      "alevin_prepref_isocollapse_cdna_introns" 
        alevin_prepref_isoseparate_cdna_introns 
      "alevin_prepref_isoseparate_cdna_introns" 
  alevin_prepref_isocollapse_cdna_introns_decoy 
"alevin_prepref_isocollapse_cdna_introns_decoy" 
  alevin_prepref_isoseparate_cdna_introns_decoy 
"alevin_prepref_isoseparate_cdna_introns_decoy" 
                       alevin_spliced_unspliced 
                     "alevin_spliced_unspliced" 
                                       starsolo 
                                     "starsolo" 
                                 starsolo_subtr 
                               "starsolo_subtr" 
> print(outrds)
[1] "plots/frac_unspliced/pancreas_plot_frac_unspliced.rds"
> 
> sces <- lapply(methods, function(nm) {
+   readRDS(file.path(topdir, paste0("output/sce/sce_", nm, ".rds")))
+ })
> 
> methods_short <- shorten_methods(methods)
> 
> sumdf_bygene <- do.call(dplyr::bind_rows, lapply(sces, function(w) {
+   data.frame(gene = rownames(w),
+              method = metadata(w)$method, 
+              spliced = rowSums(assay(w, "spliced")),
+              unspliced = rowSums(assay(w, "unspliced")),
+              total = rowSums(assay(w, "unspliced")) + rowSums(assay(w, "spliced")),
+              frac_unspliced = rowSums(assay(w, "unspliced"))/(rowSums(assay(w, "unspliced")) + rowSums(assay(w, "spliced"))),
+              stringsAsFactors = FALSE
+   )
+ }))
> 
> tx2gene <- readRDS(tx2gene)
> uniq <- merge_uniq(refdir = refdir, tx2gene = tx2gene)
Warning messages:
1: Factor `frac_unique_bin` contains implicit NA, consider using `forcats::fct_explicit_na` 
2: Factor `frac_unique_bin` contains implicit NA, consider using `forcats::fct_explicit_na` 
> 
> ## ------------------------------------------------------------------------- ##
> ## Velocity
> ## ------------------------------------------------------------------------- ##
> ## Read genes used for velocity calculations (2,000 per method)
> geneinfo <- lapply(methods, function(nm) {
+   readr::read_csv(paste0(topdir, "/plots/velocity/anndata_", nm, "/anndata_", nm, 
+                          "_gene_info.csv")) %>%
+     dplyr::mutate(method = nm)
+ })
Parsed with column specification:
cols(
  .default = col_double(),
  index = col_character(),
  velocity_genes = col_logical()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  index = col_character(),
  velocity_genes = col_logical()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  index = col_character(),
  velocity_genes = col_logical()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  index = col_character(),
  velocity_genes = col_logical()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  index = col_character(),
  velocity_genes = col_logical()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  index = col_character(),
  velocity_genes = col_logical()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  index = col_character(),
  velocity_genes = col_logical()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  index = col_character(),
  velocity_genes = col_logical()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  index = col_character(),
  velocity_genes = col_logical()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  index = col_character(),
  velocity_genes = col_logical()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  index = col_character(),
  velocity_genes = col_logical()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  index = col_character(),
  velocity_genes = col_logical()
)
See spec(...) for full column specifications.
> velocitygenes_freq <- table(unlist(lapply(geneinfo, function(w) w$index)))
> velocitygenes <- 
+   as.character(Reduce(union, lapply(geneinfo, function(w) w$index)))
> sumdf_bygene$scvelo_selected <- sumdf_bygene$gene %in% velocitygenes
> sumdf_bygene$scvelo_selected_nbr <- as.numeric(velocitygenes_freq[sumdf_bygene$gene])
> sumdf_bygene$scvelo_selected_nbr[is.na(sumdf_bygene$scvelo_selected_nbr)] <- 0
> 
> ## Summarize across methods
> sumdf_bygene_acrossmethods <- sumdf_bygene %>%
+   dplyr::group_by(gene, scvelo_selected, scvelo_selected_nbr) %>%
+   dplyr::summarize(sd_frac_unspliced = sd(frac_unspliced))
> 
> ## Plot ----
> sumdf_bygene_acrossmethods_scvelosel <- 
+   sumdf_bygene_acrossmethods %>% dplyr::filter(scvelo_selected)
> qtl <- quantile(sumdf_bygene_acrossmethods_scvelosel$sd_frac_unspliced, 0.9, na.rm = TRUE)
> ggplot(sumdf_bygene_acrossmethods_scvelosel, 
+        aes(x = sd_frac_unspliced)) + 
+   geom_histogram(bins = 100, fill = "lightgrey") + 
+   geom_vline(xintercept = qtl) + 
+   theme_bw() + 
+   labs(x = "Standard deviation of fraction UMIs in unspliced targets",
+        y = "Number of genes",
+        title = "Variability of the unspliced fractions across quantifications, by gene",
+        subtitle = "Only genes selected by scVelo for at least one quantification") 
Warning message:
Removed 49 rows containing non-finite values (stat_bin). 
> 
> ## Retain top 10% ---- 
> genes_to_keep <- sumdf_bygene_acrossmethods_scvelosel %>%
+   dplyr::filter(sd_frac_unspliced > qtl) %>%
+   dplyr::pull(gene)
> 
> ## Cluster the selected genes based on their unspliced fraction pattern across methods ---- 
> clstdata <- sumdf_bygene %>% dplyr::filter(gene %in% genes_to_keep) %>%
+   dplyr::select(gene, method, frac_unspliced) %>%
+   dplyr::left_join(methods_short) %>% 
+   dplyr::select(gene, method_short, frac_unspliced) %>%
+   tidyr::spread(key = "method_short", value = "frac_unspliced") %>%
+   as.data.frame() %>%
+   tibble::column_to_rownames("gene")
Joining, by = "method"
> clstannot <- sumdf_bygene %>% dplyr::filter(gene %in% genes_to_keep) %>%
+   dplyr::select(gene, method, total) %>%
+   dplyr::left_join(methods_short) %>% 
+   dplyr::select(gene, method_short, total) %>%
+   tidyr::spread(key = "method_short", value = "total") %>%
+   as.data.frame() %>%
+   tibble::column_to_rownames("gene")
Joining, by = "method"
> 
> hcl <- hclust(d = as.dist(sqrt(2 - 2*cor(t(clstdata)))))
> clusters <- cutree(hcl, k = 10)
> 
> pdf(gsub("\\.rds$", "_fracunspliced_clustering.pdf", outrds), 
+     width = 10, height = 35)
> print(pheatmap::pheatmap(
+   clstdata, cluster_rows = hcl, cutree_rows = 10, 
+   scale = "none", fontsize_row = 4))
> dev.off()
pdf 
  3 
> 
> for (i in unique(clusters)) {
+   gn <- names(clusters[clusters == i])
+   if (length(gn) > 2) {
+     pdf(gsub("\\.rds$", paste0("_fracunspliced_clustering_cluster", i, ".pdf"), outrds),
+         width = 8, height = 5 + length(gn) * 0.07)
+     print(pheatmap::pheatmap(
+       clstdata[gn, ], scale = "none",
+       fontsize_row = 5,
+       main = paste0("cluster ", i)))
+     dev.off()
+   }
+ }
> 
> ## Uniqueness for each cluster
> uniqsub <- uniq %>% 
+   dplyr::left_join(
+     as.data.frame(clusters) %>% tibble::rownames_to_column("gene")
+   ) %>%
+   dplyr::filter(!is.na(clusters)) %>%
+   tidyr::unite(col = "actype", ctype, atype, sep = ".") %>%
+   dplyr::mutate(clusters = factor(clusters, levels = sort(unique(as.numeric(clusters)))))
Joining, by = "gene"
>   
> pdf(gsub("\\.rds$", "_uniqueness_by_cluster.pdf", outrds), width = 7, height = 5)
> ggplot(uniqsub, aes(x = clusters, 
+                     y = frac_unique, 
+                     fill = clusters)) + 
+   geom_boxplot(alpha = 0.5) + 
+   facet_wrap(~ actype) + 
+   theme_bw() + 
+   labs(x = "Cluster", y = "Uniqueness") + 
+   theme(legend.position = "none")
> dev.off()
pdf 
  3 
> 
> saveRDS(NULL, file = outrds)
> 
> date()
[1] "Tue Dec 31 17:28:16 2019"
> sessionInfo()
R version 3.6.1 (2019-07-05)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: CentOS Linux 7 (Core)

Matrix products: default
BLAS/LAPACK: /tungstenfs/groups/gbioinfo/Appz/easybuild/software/OpenBLAS/0.3.7-GCC-8.3.0/lib/libopenblas_skylakex-r0.3.7.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] parallel  stats4    stats     graphics  grDevices utils     datasets 
[8] methods   base     

other attached packages:
 [1] cowplot_1.0.0               SingleCellExperiment_1.8.0 
 [3] SummarizedExperiment_1.16.0 DelayedArray_0.12.0        
 [5] BiocParallel_1.20.0         matrixStats_0.55.0         
 [7] Biobase_2.46.0              GenomicRanges_1.38.0       
 [9] GenomeInfoDb_1.22.0         IRanges_2.20.1             
[11] S4Vectors_0.24.1            BiocGenerics_0.32.0        
[13] ggplot2_3.2.1               dplyr_0.8.3                

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.3             lattice_0.20-38        tidyr_1.0.0           
 [4] zeallot_0.1.0          assertthat_0.2.1       digest_0.6.23         
 [7] R6_2.4.1               backports_1.1.5        acepack_1.4.1         
[10] pillar_1.4.2           zlibbioc_1.32.0        rlang_0.4.2           
[13] lazyeval_0.2.2         data.table_1.12.8      rstudioapi_0.10       
[16] rpart_4.1-15           Matrix_1.2-18          checkmate_1.9.4       
[19] labeling_0.3           splines_3.6.1          readr_1.3.1           
[22] stringr_1.4.0          foreign_0.8-72         htmlwidgets_1.5.1     
[25] pheatmap_1.0.12        RCurl_1.95-4.12        munsell_0.5.0         
[28] compiler_3.6.1         xfun_0.11              pkgconfig_2.0.3       
[31] base64enc_0.1-3        htmltools_0.4.0        nnet_7.3-12           
[34] tidyselect_0.2.5       tibble_2.1.3           gridExtra_2.3         
[37] htmlTable_1.13.3       GenomeInfoDbData_1.2.2 Hmisc_4.3-0           
[40] crayon_1.3.4           withr_2.1.2            bitops_1.0-6          
[43] grid_3.6.1             gtable_0.3.0           lifecycle_0.1.0       
[46] magrittr_1.5           scales_1.1.0           stringi_1.4.3         
[49] farver_2.0.1           XVector_0.26.0         latticeExtra_0.6-28   
[52] ellipsis_0.3.0         vctrs_0.2.1            Formula_1.2-3         
[55] RColorBrewer_1.1-2     tools_3.6.1            glue_1.3.1            
[58] purrr_0.3.3            hms_0.5.2              survival_3.1-8        
[61] colorspace_1.4-1       cluster_2.1.0          knitr_1.26            
> 
> proc.time()
   user  system elapsed 
 86.169   4.768  92.277 
