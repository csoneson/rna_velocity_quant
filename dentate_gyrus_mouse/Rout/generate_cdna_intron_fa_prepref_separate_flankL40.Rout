
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> args <- (commandArgs(trailingOnly = TRUE))
> for (i in seq_len(length(args))) {
+   eval(parse(text = args[[i]]))
+ }
> 
> suppressPackageStartupMessages({
+   library(Biostrings)
+   library(rtracklayer)
+   library(dplyr)
+   library(GenomicFeatures)
+   library(BiocGenerics)
+   library(BSgenome)
+   library(GenomicRanges)
+ })
> 
> print(scriptdir)
[1] "/tungstenfs/groups/gbioinfo/sonechar/Projects/alevin_velocity/scripts"
> print(gtf)
[1] "/tungstenfs/groups/gbioinfo/DB/GENCODE/Mouse/release_M21/gencode.vM21.annotation.gtf"
> print(genome)
[1] "/tungstenfs/groups/gbioinfo/DB/GENCODE/Mouse/release_M21/GRCm38.primary_assembly.genome.fa"
> print(isoform_action)
[1] "separate"
> print(flanklength)
[1] 57
> print(outdir)
[1] "reference/prepref_isoseparate_flankL40"
> 
> source(file.path(scriptdir, "extractIntronSeqs.R"))
> source(file.path(scriptdir, "extractTxSeqs.R"))
> 
> ## Extract intronic sequences flanked by L-1 bases 
> ## of exonic sequences where L is the biological read length
> genome <- Biostrings::readDNAStringSet(genome)
> names(genome) <- sapply(strsplit(names(genome), " "), .subset, 1)
> gtfdf <- as.data.frame(rtracklayer::import(gtf))
> 
> ## Extract transcript and intron sequences
> tx <- extractTxSeqs(gtf = gtf, genome = genome, type = "spliced")
Import genomic features from the file as a GRanges object ... OK
Prepare the 'metadata' data frame ... OK
Make the TxDb object ... OK
Warning message:
In .get_cds_IDX(mcols0$type, mcols0$phase) :
  The "phase" metadata column contains non-NA values for features of type
  stop_codon. This information was ignored.
> intr <- extractIntronSeqs(gtf = gtf, genome = genome, type = isoform_action, 
+                           flanklength = flanklength,
+                           joinOverlappingIntrons = FALSE)
Import genomic features from the file as a GRanges object ... OK
Prepare the 'metadata' data frame ... OK
Make the TxDb object ... OK
Warning message:
In .get_cds_IDX(mcols0$type, mcols0$phase) :
  The "phase" metadata column contains non-NA values for features of type
  stop_codon. This information was ignored.
> 
> ## Generate transcript/intron-to-gene mapping
> t2gtx <- gtfdf %>% dplyr::filter(type == "transcript") %>%
+   dplyr::select(transcript_id, gene_id) %>%
+   dplyr::distinct()
> if (isoform_action == "collapse") {
+   ## Intron names already contain gene name
+   t2gin <- data.frame(intr = names(intr),
+                       gene = gsub("\\-I[0-9]*$", "", names(intr)),
+                       stringsAsFactors = FALSE)
+ } else if (isoform_action == "separate") {
+   ## Intron names contain transcript name
+   t2gin <- data.frame(intr = names(intr),
+                       transcript_id = gsub("\\-I[0-9]*$", "", names(intr)),
+                       stringsAsFactors = FALSE) %>%
+     dplyr::left_join(t2gtx, by = "transcript_id") %>%
+     dplyr::select(intr, gene_id)
+ } else {
+   stop("Unknown isoform_action")
+ }
> colnames(t2gin) <- colnames(t2gtx)
> t2g <- rbind(t2gtx, t2gin)
> 
> Biostrings::writeXStringSet(c(tx, intr), file.path(outdir, "cDNA_introns.fa.gz"), 
+                             compress = TRUE)
> write.table(names(tx), file = file.path(outdir, "cDNA_tx_to_capture.txt"), 
+             row.names = FALSE, col.names = FALSE, quote = FALSE, sep = "\t")
> write.table(names(intr), file = file.path(outdir, "introns_tx_to_capture.txt"), 
+             row.names = FALSE, col.names = FALSE, quote = FALSE, sep = "\t")
> write.table(t2g, file = file.path(outdir, "tr2g.tsv"), 
+             row.names = FALSE, col.names = FALSE, quote = FALSE, sep = "\t")
> 
> date()
[1] "Fri Feb  7 15:56:16 2020"
> sessionInfo()
R version 3.6.1 (2019-07-05)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: CentOS Linux 7 (Core)

Matrix products: default
BLAS/LAPACK: /tungstenfs/groups/gbioinfo/Appz/easybuild/software/OpenBLAS/0.3.7-GCC-8.3.0/lib/libopenblas_skylakex-r0.3.7.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats4    parallel  stats     graphics  grDevices utils     datasets 
[8] methods   base     

other attached packages:
 [1] BSgenome_1.54.0        GenomicFeatures_1.38.1 AnnotationDbi_1.48.0  
 [4] Biobase_2.46.0         dplyr_0.8.4            rtracklayer_1.46.0    
 [7] GenomicRanges_1.38.0   GenomeInfoDb_1.22.0    Biostrings_2.54.0     
[10] XVector_0.26.0         IRanges_2.20.2         S4Vectors_0.24.3      
[13] BiocGenerics_0.32.0   

loaded via a namespace (and not attached):
 [1] SummarizedExperiment_1.16.1 progress_1.2.2             
 [3] tidyselect_1.0.0            purrr_0.3.3                
 [5] lattice_0.20-38             vctrs_0.2.2                
 [7] BiocFileCache_1.10.2        blob_1.2.1                 
 [9] XML_3.99-0.3                rlang_0.4.4                
[11] pillar_1.4.3                glue_1.3.1                 
[13] DBI_1.1.0                   BiocParallel_1.20.1        
[15] rappdirs_0.3.1              bit64_0.9-7                
[17] dbplyr_1.4.2                matrixStats_0.55.0         
[19] GenomeInfoDbData_1.2.2      stringr_1.4.0              
[21] zlibbioc_1.32.0             memoise_1.1.0              
[23] biomaRt_2.42.0              curl_4.3                   
[25] Rcpp_1.0.3                  openssl_1.4.1              
[27] DelayedArray_0.12.2         bit_1.1-15.1               
[29] Rsamtools_2.2.1             hms_0.5.3                  
[31] askpass_1.1                 digest_0.6.23              
[33] stringi_1.4.5               grid_3.6.1                 
[35] tools_3.6.1                 bitops_1.0-6               
[37] magrittr_1.5                RCurl_1.98-1.1             
[39] tibble_2.1.3                RSQLite_2.2.0              
[41] crayon_1.3.4                pkgconfig_2.0.3            
[43] Matrix_1.2-18               prettyunits_1.1.1          
[45] assertthat_0.2.1            httr_1.4.1                 
[47] R6_2.4.1                    GenomicAlignments_1.22.1   
[49] compiler_3.6.1             
> 
> proc.time()
   user  system elapsed 
912.298   8.194 926.117 
