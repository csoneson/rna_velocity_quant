
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> args <- (commandArgs(trailingOnly = TRUE))
> for (i in seq_len(length(args))) {
+   eval(parse(text = args[[i]]))
+ }
> 
> suppressPackageStartupMessages({
+   library(dplyr)
+   library(SummarizedExperiment)
+   library(SingleCellExperiment)
+   library(scater)
+   library(readr)
+ })
> 
> methods <- strsplit(methods, ",")[[1]]
> names(methods) <- methods
> 
> print(topdir)
[1] "/tungstenfs/groups/gbioinfo/sonechar/Projects/alevin_velocity/dentate_gyrus_mouse"
> print(methods)
  kallisto_bustools_prepref_isocollapse_exclude 
"kallisto_bustools_prepref_isocollapse_exclude" 
  kallisto_bustools_prepref_isoseparate_exclude 
"kallisto_bustools_prepref_isoseparate_exclude" 
  kallisto_bustools_prepref_isocollapse_include 
"kallisto_bustools_prepref_isocollapse_include" 
  kallisto_bustools_prepref_isoseparate_include 
"kallisto_bustools_prepref_isoseparate_include" 
        alevin_prepref_isocollapse_cdna_introns 
      "alevin_prepref_isocollapse_cdna_introns" 
        alevin_prepref_isoseparate_cdna_introns 
      "alevin_prepref_isoseparate_cdna_introns" 
  alevin_prepref_isocollapse_cdna_introns_decoy 
"alevin_prepref_isocollapse_cdna_introns_decoy" 
  alevin_prepref_isoseparate_cdna_introns_decoy 
"alevin_prepref_isoseparate_cdna_introns_decoy" 
                       alevin_spliced_unspliced 
                     "alevin_spliced_unspliced" 
                                       starsolo 
                                     "starsolo" 
                                 starsolo_subtr 
                               "starsolo_subtr" 
> print(outtxt)
[1] "output/genesets/shared_genes.txt"
> 
> geneinfo <- lapply(methods, function(nm) {
+   readr::read_csv(paste0(topdir, "/plots/velocity/anndata_", nm, "/anndata_", nm, 
+                          "_gene_info.csv")) %>%
+     dplyr::mutate(method = nm)
+ })
Parsed with column specification:
cols(
  .default = col_double(),
  index = col_character(),
  velocity_genes = col_logical()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  index = col_character(),
  velocity_genes = col_logical()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  index = col_character(),
  velocity_genes = col_logical()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  index = col_character(),
  velocity_genes = col_logical()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  index = col_character(),
  velocity_genes = col_logical()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  index = col_character(),
  velocity_genes = col_logical()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  index = col_character(),
  velocity_genes = col_logical()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  index = col_character(),
  velocity_genes = col_logical()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  index = col_character(),
  velocity_genes = col_logical()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  index = col_character(),
  velocity_genes = col_logical()
)
See spec(...) for full column specifications.
Parsed with column specification:
cols(
  .default = col_double(),
  index = col_character(),
  velocity_genes = col_logical()
)
See spec(...) for full column specifications.
> 
> ## Extract all genes that are selected with all methods, and have valid fits with all methods
> allgenes <- as.character(Reduce(union, lapply(geneinfo, function(w) w$index[!is.na(w$fit_alpha)])))
> selgenes <- do.call(cbind, lapply(geneinfo, function(w) as.numeric(allgenes %in% w$index[!is.na(w$fit_alpha)])))
> rownames(selgenes) <- allgenes
> selgenes <- data.frame(selgenes)
> 
> n_methods <- ncol(selgenes)
> genes_in_all <- selgenes %>% 
+   tibble::rownames_to_column("gene") %>%
+   tidyr::gather(key = "method", value = "selected", -gene) %>%
+   dplyr::group_by(gene) %>%
+   dplyr::summarize(n = sum(selected)) %>% 
+   dplyr::filter(n == n_methods) %>%
+   dplyr::pull(gene)
> 
> write.table(genes_in_all, file = outtxt, row.names = FALSE, col.names = FALSE,
+             quote = FALSE, sep = "\t")
> 
> date()
[1] "Fri Jan 10 20:16:38 2020"
> sessionInfo()
R version 3.6.1 (2019-07-05)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: CentOS Linux 7 (Core)

Matrix products: default
BLAS/LAPACK: /tungstenfs/groups/gbioinfo/Appz/easybuild/software/OpenBLAS/0.3.7-GCC-8.3.0/lib/libopenblas_skylakex-r0.3.7.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] parallel  stats4    stats     graphics  grDevices utils     datasets 
[8] methods   base     

other attached packages:
 [1] readr_1.3.1                 scater_1.14.5              
 [3] ggplot2_3.2.1               SingleCellExperiment_1.8.0 
 [5] SummarizedExperiment_1.16.0 DelayedArray_0.12.0        
 [7] BiocParallel_1.20.0         matrixStats_0.55.0         
 [9] Biobase_2.46.0              GenomicRanges_1.38.0       
[11] GenomeInfoDb_1.22.0         IRanges_2.20.1             
[13] S4Vectors_0.24.1            BiocGenerics_0.32.0        
[15] dplyr_0.8.3                

loaded via a namespace (and not attached):
 [1] beeswarm_0.2.3           tidyselect_0.2.5         purrr_0.3.3             
 [4] BiocSingular_1.2.0       lattice_0.20-38          colorspace_1.4-1        
 [7] vctrs_0.2.1              viridisLite_0.3.0        rlang_0.4.2             
[10] pillar_1.4.2             glue_1.3.1               withr_2.1.2             
[13] GenomeInfoDbData_1.2.2   lifecycle_0.1.0          zlibbioc_1.32.0         
[16] munsell_0.5.0            gtable_0.3.0             rsvd_1.0.2              
[19] vipor_0.4.5              irlba_2.3.3              BiocNeighbors_1.4.1     
[22] Rcpp_1.0.3               scales_1.1.0             backports_1.1.5         
[25] XVector_0.26.0           gridExtra_2.3            hms_0.5.2               
[28] grid_3.6.1               tools_3.6.1              bitops_1.0-6            
[31] magrittr_1.5             RCurl_1.95-4.12          lazyeval_0.2.2          
[34] tibble_2.1.3             tidyr_1.0.0              crayon_1.3.4            
[37] pkgconfig_2.0.3          zeallot_0.1.0            ellipsis_0.3.0          
[40] Matrix_1.2-18            DelayedMatrixStats_1.8.0 ggbeeswarm_0.6.0        
[43] assertthat_0.2.1         viridis_0.5.1            R6_2.4.1                
[46] compiler_3.6.1          
> 
> proc.time()
   user  system elapsed 
  5.982   0.806   8.969 
